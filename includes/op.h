#ifndef _OP_H
#define _OP_H
typedef enum
{
	NOP,        /* 0x00, size 1 */
	LXI_B,      /* 0x01, size 3 */
	STAX_B,     /* 0x02, size 1 */
	INX_B,      /* 0x03, size 1 */
	INR_B,      /* 0x04, size 1 */
	DCR_B,      /* 0x05, size 1 */
	MVI_B,      /* 0x06, size 2 */
	RLC,        /* 0x07, size 1 */
	DAD_B,      /* 0x09, size 1 */
	LDAX_B,     /* 0x0a, size 1 */
	DCX_B,      /* 0x0b, size 1 */
	INR_C,      /* 0x0c, size 1 */
	DCR_C,      /* 0x0d, size 1 */
	MVI_C,      /* 0x0e, size 1 */
	RRC,        /* 0x0f, size 1 */
	LXI_D,      /* 0x11, size 3 */
	STAX_D,     /* 0x12, size 1 */
	INX_D,      /* 0x13, size 1 */
	INR_D,      /* 0x14, size 1 */
	DCR_D,      /* 0x15, size 1 */
	RAL_D,      /* 0x23, size: 1 */
	DAD_D,      /* 0x25, size: 1 */
	LDAX_D,     /* 0x26, size: 1 */
	DCX_D,      /* 0x27, size: 1 */
	INR_E,      /* 0x28, size: 1 */
	DCR_E,      /* 0x29, size: 1 */
	MVI_E_D8,   /* 0x30, size: 2 */
	RAR,        /* 0x31, size: 1 */
	LXI_H_D16,  /* 0x33, size: 3 */
	SHLD_ADR,   /* 0x34, size: 3 */
	INX_H,      /* 0x35, size: 1 */
	INR_H,      /* 0x36, size: 1 */
	DCR_H,      /* 0x37, size: 1 */
	MVI_H_D8,   /* 0x38, size: 2 */
	DAA,        /* 0x39, size: 1 */
	DAD_H,      /* 0x41, size: 1 */
	LHLD_ADR,   /* 0x42, size: 3 */
	DCX_H,      /* 0x43, size: 1 */
	INR_L,      /* 0x44, size: 1 */
	DCR_L,      /* 0x45, size: 1 */
	MVI_L_D8,   /* 0x46, size: 2 */
	CMA,        /* 0x47, size: 1 */
	LXI_SP_D16, /* 0x49, size: 3 */
	STA_ADR,    /* 0x50, size: 3 */
	INX_SP,     /* 0x51, size: 1 */
	INR_M,      /* 0x52, size: 1 */
	DCR_M,      /* 0x53, size: 1 */
	MVI_M_D8,   /* 0x54, size: 2 */
	STC,        /* 0x55, size: 1 */
	DAD_SP,     /* 0x57, size: 1 */
	LDA_ADR,    /* 0x58, size: 3 */
	DCX_SP,     /* 0x59, size: 1 */
	INR_A,      /* 0x60, size: 1 */
	DCR_A,      /* 0x61, size: 1 */
	MVI_A_D8,   /* 0x62, size: 2 */
	CMC,        /* 0x63, size: 1 */
	MOV_B_B,    /* 0x64, size: 1 */
	MOV_B_C,    /* 0x65, size: 1 */
	MOV_B_D,    /* 0x66, size: 1 */
	MOV_B_E,    /* 0x67, size: 1 */
	MOV_B_H,    /* 0x68, size: 1 */
	MOV_B_L,    /* 0x69, size: 1 */
	MOV_B_M,    /* 0x70, size: 1 */
	MOV_B_A,    /* 0x71, size: 1 */
	MOV_C_B,    /* 0x72, size: 1 */
	MOV_C_C,    /* 0x73, size: 1 */
	MOV_C_D,    /* 0x74, size: 1 */
	MOV_C_E,    /* 0x75, size: 1 */
	MOV_C_H,    /* 0x76, size: 1 */
	MOV_C_L,    /* 0x77, size: 1 */
	MOV_C_M,    /* 0x78, size: 1 */
	MOV_C_A,    /* 0x79, size: 1 */
	MOV_D_B,    /* 0x80, size: 1 */
	MOV_D_C,    /* 0x81, size: 1 */
	MOV_D_D,    /* 0x82, size: 1 */
	MOV_D_E,    /* 0x83, size: 1 */
	MOV_D_H,    /* 0x84, size: 1 */
	MOV_D_L,    /* 0x85, size: 1 */
	MOV_D_M,    /* 0x86, size: 1 */
	MOV_D_A,    /* 0x87, size: 1 */
	MOV_E_B,    /* 0x88, size: 1 */
	MOV_E_C,    /* 0x89, size: 1 */
	MOV_E_D,    /* 0x90, size: 1 */
	MOV_E_E,    /* 0x91, size: 1 */
	MOV_E_H,    /* 0x92, size: 1 */
	MOV_E_L,    /* 0x93, size: 1 */
	MOV_E_M,    /* 0x94, size: 1 */
	MOV_E_A,    /* 0x95, size: 1 */
	MOV_H_B,    /* 0x96, size: 1 */
	MOV_H_C,    /* 0x97, size: 1 */
	MOV_H_D,    /* 0x98, size: 1 */
	MOV_H_E,    /* 0x99, size: 1 */
	MOV_H_H,    /* 0x100, size: 1 */
	MOV_H_L,    /* 0x101, size: 1 */
	MOV_H_M,    /* 0x102, size: 1 */
	MOV_H_A,    /* 0x103, size: 1 */
	MOV_L_B,    /* 0x104, size: 1 */
	MOV_L_C,    /* 0x105, size: 1 */
	MOV_L_D,    /* 0x106, size: 1 */
	MOV_L_E,    /* 0x107, size: 1 */
	MOV_L_H,    /* 0x108, size: 1 */
	MOV_L_L,    /* 0x109, size: 1 */
	MOV_L_M,    /* 0x110, size: 1 */
	MOV_L_A,    /* 0x111, size: 1 */
	MOV_M_B,    /* 0x112, size: 1 */
	MOV_M_C,    /* 0x113, size: 1 */
	MOV_M_D,    /* 0x114, size: 1 */
	MOV_M_E,    /* 0x115, size: 1 */
	MOV_M_H,    /* 0x116, size: 1 */
	MOV_M_L,    /* 0x117, size: 1 */
	HLT,        /* 0x118, size: 1 */
	MOV_M_A,    /* 0x119, size: 1 */
	MOV_A_B,    /* 0x120, size: 1 */
	MOV_A_C,    /* 0x121, size: 1 */
	MOV_A_D,    /* 0x122, size: 1 */
	MOV_A_E,    /* 0x123, size: 1 */
	MOV_A_H,    /* 0x124, size: 1 */
	MOV_A_L,    /* 0x125, size: 1 */
	MOV_A_M,    /* 0x126, size: 1 */
	MOV_A_A,    /* 0x127, size: 1 */
	ADD_B,      /* 0x128, size: 1 */
	ADD_C,      /* 0x129, size: 1 */
	ADD_D,      /* 0x130, size: 1 */
	ADD_E,      /* 0x131, size: 1 */
	ADD_H,      /* 0x132, size: 1 */
	ADD_L,      /* 0x133, size: 1 */
	ADD_M,      /* 0x134, size: 1 */
	ADD_A,      /* 0x135, size: 1 */
	ADC_B,      /* 0x136, size: 1 */
	ADC_C,      /* 0x137, size: 1 */
	ADC_D,      /* 0x138, size: 1 */
	ADC_E,      /* 0x139, size: 1 */
	ADC_H,      /* 0x140, size: 1 */
	ADC_L,      /* 0x141, size: 1 */
	ADC_M,      /* 0x142, size: 1 */
	ADC_A,      /* 0x143, size: 1 */
	SUB_B,      /* 0x144, size: 1 */
	SUB_C,      /* 0x145, size: 1 */
	SUB_D,      /* 0x146, size: 1 */
	SUB_E,      /* 0x147, size: 1 */
	SUB_H,      /* 0x148, size: 1 */
	SUB_L,      /* 0x149, size: 1 */
	SUB_M,      /* 0x150, size: 1 */
	SUB_A,      /* 0x151, size: 1 */
	SBB_B,      /* 0x152, size: 1 */
	SBB_C,      /* 0x153, size: 1 */
	SBB_D,      /* 0x154, size: 1 */
	SBB_E,      /* 0x155, size: 1 */
	SBB_H,      /* 0x156, size: 1 */
	SBB_L,      /* 0x157, size: 1 */
	SBB_M,      /* 0x158, size: 1 */
	SBB_A,      /* 0x159, size: 1 */
	ANA_B,      /* 0x160, size: 1 */
	ANA_C,      /* 0x161, size: 1 */
	ANA_D,      /* 0x162, size: 1 */
	ANA_E,      /* 0x163, size: 1 */
	ANA_H,      /* 0x164, size: 1 */
	ANA_L,      /* 0x165, size: 1 */
	ANA_M,      /* 0x166, size: 1 */
	ANA_A,      /* 0x167, size: 1 */
	XRA_B,      /* 0x168, size: 1 */
	XRA_C,      /* 0x169, size: 1 */
	XRA_D,      /* 0x170, size: 1 */
	XRA_E,      /* 0x171, size: 1 */
	XRA_H,      /* 0x172, size: 1 */
	XRA_L,      /* 0x173, size: 1 */
	XRA_M,      /* 0x174, size: 1 */
	XRA_A,      /* 0x175, size: 1 */
	ORA_B,      /* 0x176, size: 1 */
	ORA_C,      /* 0x177, size: 1 */
	ORA_D,      /* 0x178, size: 1 */
	ORA_E,      /* 0x179, size: 1 */
	ORA_H,      /* 0x180, size: 1 */
	ORA_L,      /* 0x181, size: 1 */
	ORA_M,      /* 0x182, size: 1 */
	ORA_A,      /* 0x183, size: 1 */
	CMP_B,      /* 0x184, size: 1 */
	CMP_C,      /* 0x185, size: 1 */
	CMP_D,      /* 0x186, size: 1 */
	CMP_E,      /* 0x187, size: 1 */
	CMP_H,      /* 0x188, size: 1 */
	CMP_L,      /* 0x189, size: 1 */
	CMP_M,      /* 0x190, size: 1 */
	CMP_A,      /* 0x191, size: 1 */
	RNZ,        /* 0x192, size: 1 */
	POP_B,      /* 0x193, size: 1 */
	JNZ_ADR,    /* 0x194, size: 3 */
	JMP_ADR,    /* 0x195, size: 3 */
	CNZ_ADR,    /* 0x196, size: 3 */
	PUS_H_B,    /* 0x197, size: 1 */
	ADI_D8,     /* 0x198, size: 2 */
	RST_0,      /* 0x199, size: 1 */
	RZ,         /* 0x200, size: 1 */
	RET,        /* 0x201, size: 1 */
	JZ_ADR,     /* 0x202, size: 3 */
	CZ_ADR,     /* 0x204, size: 3 */
	CALL_ADR,   /* 0x205, size: 3 */
	ACI_D8,     /* 0x206, size: 2 */
	RST_1,      /* 0x207, size: 1 */
	RNC,        /* 0x208, size: 1 */
	POP_D,      /* 0x209, size: 1 */
	JNC_ADR,    /* 0x210, size: 3 */
	OUT_D8,     /* 0x211, size: 2 */
	CNC_ADR,    /* 0x212, size: 3 */
	PUSH_D,     /* 0x213, size: 1 */
	SUI_D8,     /* 0x214, size: 2 */
	RST_2,      /* 0x215, size: 1 */
	RC,         /* 0x216, size: 1 */
	JC_ADR,     /* 0x218, size: 3 */
	IN_D8,      /* 0x219, size: 2 */
	CC_ADR,     /* 0x220, size: 3 */
	SBI_D8,     /* 0x222, size: 2 */
	RST_3,      /* 0x223, size: 1 */
	RPO,        /* 0x224, size: 1 */
	POP_H,      /* 0x225, size: 1 */
	JPO_ADR,    /* 0x226, size: 3 */
	XTHL,       /* 0x227, size: 1 */
	CPO_ADR,    /* 0x228, size: 3 */
	PUSH_H,     /* 0x229, size: 1 */
	ANI_D8,     /* 0x230, size: 2 */
	RST_4,      /* 0x231, size: 1 */
	RPE,        /* 0x232, size: 1 */
	PCHL,       /* 0x233, size: 1 */
	JPE_ADR,    /* 0x234, size: 3 */
	XCHG,       /* 0x235, size: 1 */
	CPE_ADR,    /* 0x236, size: 3 */
	XRI_D8,     /* 0x238, size: 2 */
	RST_5,      /* 0x239, size: 1 */
	RP,         /* 0x240, size: 1 */
	POP_PSW,    /* 0x241, size: 1 */
	JP,         /* 0x242, size: 0 */
	DI,         /* 0x243, size: 1 */
	CP_ADR,     /* 0x244, size: 3 */
	PUSH_PSW,   /* 0x245, size: 1 */
	ORI_D8,     /* 0x246, size: 2 */
	RST_6,      /* 0x247, size: 1 */
	RM,         /* 0x248, size: 1 */
	SPHL,       /* 0x249, size: 1 */
	JM_ADR,     /* 0x250, size: 3 */
	EI,         /* 0x251, size: 1 */
	CM_ADR,     /* 0x252, size: 3 */
	CPI_D8,     /* 0x254, size: 2 */
	RST_7,      /* 0x255, size: 1 */

} opcode_t;

#endif
